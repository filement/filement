---- HIGH ----

command line app
	version information
	reset while a device is running
gui app
	version information
	more robust code (create directories in the path, make sure there are no memory leaks and concurrency problems, etc.)
? modify filement_stop() to cancel server_listen()

add suggestion to deb package for filement-index
https://www.debian.org/doc/manuals/distribute-deb/distribute-deb.html

read about libc dependencies on debian and fedora

fix distribute server and proxy bugs (events not reflected in the interface, etc.); one bug is android device still shown as active after being shut down

line number for each log output
simplify log.h (no need to customly set level? just debug/no_debug)

Title																				Status
send RST on download error															partial
	Doesn't work for connections through proxy
fix compilation for all targets														partial
import router code

daemonization
	(file descriptors, logs, ?error reports, etc.). logs & statistics

{-make code strict aliasing comliant
http://cellperformance.beyond3d.com/articles/2006/06/understanding-strict-aliasing.html
http://web.archive.org/web/20080107035604/http://www.cellperformance.com/mike_acton/2006/05/demystifying_the_restrict_keyw.html-}

distribute error:
	[06 Jul 2014 07:28:30] Unable to accept (errno=24)

fix certificate authorities (at the moment storage_json can not verify cloudflare's certificate when fetching storage)

blocks can be seen without entering device password

session_login is slow on token with wrong length (probably the distirubte server does not return error immediately)

? possible bug when copying symlink to a directory

handle soft links better (at the moment one of the pubclouds returns 500 when trying to ffs.download a soft link)

don't truncate files; instead unlink and create new ones (fixes nikov's bug)

cache permissions

update and integrate findex

---- MEDIUM ----

iOS
	M	add application icon
	M	write support
	M	don't load whole videos in memory
	L	?audio support
			see https://developer.apple.com/library/ios/documentation/mediaplayer/reference/MPMediaQuery_ClassReference/Reference/Reference.html
	L	background support; remove the disable call for screen locking
	separate blocks for Video, Audio, Private

mac
	developer ID to fix gatekeeper "Unregistered developer" error

add Location header to the response of "tinyurl" (/uuid/~....)

upload behavior (fs.upload, fs.save):
	when overwriting a file, upload the new file with a different name and then rename it on success or delete it on failure
	when appending to a file, on error truncate the file to the size it was before

centralized cache file handling
	extracted file cache should expire after certain time

multiple devices on a single system (ports coincide)

(pending)
	.tar.xz archives are not recognized by the interface
	svg should be opened directly by the image viewer
	qt should be recognized as video/quicktime

device <-> distribute protocol logging

replace random() and srandom() with random_r() and srandom_r()
http://www.evanjones.ca/random-thread-safe.html

event server security

write tests

tls
	browsers can connect to the proxy only on port 80 (without TLS) because 443 is used for device connections to the proxy. fix this (device should connect to the proxy on a different port)

make filement shell usable

---- LOW ----

use lint
	https://en.wikipedia.org/wiki/Lint_programming_tool

use FD_CLOEXEC in open() (useful for device upgrade)
	http://www.linuxprogrammingblog.com/threads-and-fork-think-twice-before-using-them

interface:
	status bar - number of selected entries, total size, etc.

non-latin stuff support (e.g. case-insensitive search by name in cyrillic)

miniupnpc ipv6 on tplink
	two comments with "martinkunev" in them in 192.168.2.29:/root/filement_openwrt/external/miniupnpc_filement/miniupnpc.c

better database design for distribute server

http compression
HTTP error pages

evfs
	error detection and reporting
	? use separate functions (instead of one huge function)
	tests
	remove code duplication in tar and zip
	design core functions for handling file paths. these functions must make sure the path is normalized, there is always one additional byte available (in case putting / is necessary), etc.

improve log functions

memory optimizations
	proxy: store only char arrays for UUIDs since length is known; store uuids in binary form
		48B -> 16B

integrate better libraries
	json, hashmap (custom hash function?), array, format, hash
	parse: hex2bin, strtol, base64, etc.
	stream: faster tls (resume handshake, buffer size); more secure tls (rehandshake, regenerate prime numbers); think about the limit on read length
	? bytearray
	better implementation of queue
