# Filement

# http://gl.developpez.com/tutoriel/outil/makefile/

DEF=-D_GNU_SOURCE -DOS_BSD -D_BSD_SOURCE -D_DEFAULT_SOURCE -D_FILE_OFFSET_BITS=64 @{PLATFORM}
INC=-I$(CURDIR) -I$(CURDIR)/lib -I$(CURDIR)/../include
LIB=-L$(CURDIR)/../lib
# TODO is it okay to add -Wno-cast-align
# TODO ?-Wstrict-aliasing
WARNINGS=-Werror -Wchar-subscripts -Wimplicit -Wsequence-point -Wcast-align -Wstrict-prototypes -Wno-parentheses -Wno-comment -Wno-pointer-sign -Wno-return-type -Wno-cast-align -Wno-switch-enum -Wno-switch

DEVICE_SRC=upload.o evfs.o io.o security.o http.o http_parse.o http_response.o status.o remote.o actions.o access.o server.o download.o zip.o tar.o earchive.o cache.o operations.o magic.o

export CC=@{CC}
export CFLAGS=-std=c99 -fPIC -pthread -fstrict-aliasing @{OPTIONS} $(DEF) $(INC) $(WARNINGS) @{FLAGS}
export LDFLAGS=-pthread $(LIB) @{LINK}
export PATH := @{ROOT}/bin:$(PATH)

all:

force:
	@true

storage_sqlite: sqlite.c storage_sqlite.o
	$(CC) -std=c99 @{OPTIONS} -fPIC -pthread -c sqlite.c -ldl
	ar rcs storage.a storage_sqlite.o sqlite.o

storage_remote: storage_remote.o
	ar rcs storage.a storage_remote.o

storage_mysql: storage_mysql.o
	ar rcs storage.a storage_mysql.o

device: $(DEVICE_SRC) @{STORAGE} force
	$(MAKE) -C lib string.o vector.o dictionary.o queue.o buffer.o format.o stream.o log.o json.o sha2.o aes.o @{LIBS}
	$(MAKE) -C device
	$(MAKE) -C actions_device
	$(MAKE) -C dlna

pubc: $(DEVICE_SRC) storage_mysql force
	$(MAKE) -C lib string.o vector.o dictionary.o queue.o buffer.o format.o stream.o log.o json.o sha2.o aes.o @{LIBS}
	$(MAKE) -C actions_pubcloud

register:
	$(MAKE) -C distribute uuid.o
	$(MAKE) -C lib string.o format.o aes.o
	$(CC) lib/string.o lib/format.o lib/aes.o distribute/uuid.o $(LDFLAGS) -o ../bin/register

# TODO fix md5

filement: main.o @{STORAGE} device
	$(CC) $(DEVICE_SRC) main.o storage.a device/*.o actions_device/*.o dlna/*.o lib/string.o lib/vector.o lib/dictionary.o lib/queue.o lib/buffer.o lib/format.o lib/stream.o lib/log.o lib/json.o lib/sha2.o lib/aes.o @{LIBS1} $(LDFLAGS) -o ../bin/filement
	cp ../bin/filement ../bin/device
	@{STRIP}

libfilement.so: @{STORAGE} device
	$(CC) @{OPTIONS} $(DEVICE_SRC) storage.a @{SHARED} device/*.o dlna/*.o actions_device/*.o lib/string.o lib/vector.o lib/dictionary.o lib/queue.o lib/buffer.o lib/format.o lib/stream.o lib/log.o lib/json.o lib/sha2.o lib/aes.o @{LIBS1} $(LDFLAGS) -Wl,@{SONAME},libfilement@{SUFFIX} -o "../lib/libfilement@{SUFFIX}"

pubcloud: pubc device/device.o device/distribute.o main.o
	$(CC) $(DEVICE_SRC) storage.a device/device.o device/distribute.o main.o actions_pubcloud/*.o lib/string.o lib/vector.o lib/dictionary.o lib/queue.o lib/buffer.o lib/format.o lib/stream.o lib/log.o lib/json.o lib/sha2.o lib/aes.o @{LIBS1} $(LDFLAGS) -lmysqlclient -o ../bin/pubcloud

failsafe: @{STORAGE} device
	# TODO this should do its own configure
	$(CC) -std=c99 $(DEF) -DFAILSAFE $(INC) -Wno-pointer-sign -c sqlite.c storage_sqlite.c
	$(CC) -std=c99 -pthread @{OPTIONS} $(DEF) -DFAILSAFE -UDEVICE -UTLS $(INC) $(WARNINGS) @{FLAGS} \
		lib/string.c \
		lib/format.c \
		lib/dictionary.c \
		lib/vector.c \
		lib/json.c \
		lib/stream.c \
		lib/sha2.c \
		lib/log.c \
		io.c \
		status.c \
		http.c \
		http_parse.c \
		upload.c \
		storage_sqlite.o \
		sqlite.o \
		device/distribute.c \
		device/upgrade.c \
		device/startup.c \
		failsafe.c \
		-o ../bin/failsafe

clean:
	rm -f *.o
	rm -f storage.a
	$(MAKE) -C lib clean
	$(MAKE) -C device clean
	$(MAKE) -C actions_device clean
	$(MAKE) -C dlna clean
	$(MAKE) -C actions_pubcloud clean
	rm -f ../bin/device
	rm -f ../bin/pubcloud

mrproper: clean
	$(MAKE) -C lib mrproper
	$(MAKE) -C device mrproper
	$(MAKE) -C actions_device mrproper
	$(MAKE) -C actions_pubcloud mrproper
	rm -f actions_sorted.h
	rm -f actions.out
	rm -f Makefile
