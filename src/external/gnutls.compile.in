#!/bin/bash
# Use this to compile gnutls in order to use it with Filement.

# TODO use this for 32bit systems
#export CFLAGS="-march=i686 $CFLAGS"

export CFLAGS="-march=athlon64 $CFLAGS"

# Reset environment variables to avoid linking to unnecessary libraries.
# TODO this fixes libidn; do i need to reset some other variable?
#export C_INCLUDE_PATH=
#export LD_LIBRARY_PATH=

normalize()
{
	echo `cd ./$1 && pwd`
}

build_gmp()
{
	# TODO on mac:
	#./configure --disable-shared --disable-assembly > /dev/null &&

	tar xfJ gmp-6.1.2.tar.gz &&
	cd gmp-6.1.2 &&
	./configure --disable-shared > /dev/null &&
	make > /dev/null &&
	cd ../ &&
	return 0

	# TODO if crashes appear, it may be because of the "ld: warning: PIE disabled. Absolute addressing not allowed in code signed PIE" warning.
	# --disable-assembly should fix such problems
}

build_nettle()
{
	tar xfz nettle-3.4.tar.gz &&
	cd nettle-3.4 &&
	./configure --disable-shared --with-include-path=$(normalize ../gmp-6.1.2) --with-lib-path=$(normalize ../gmp-6.1.2/.libs) > /dev/null &&
	make > /dev/null &&
	cd ../ &&
	return 0
}

build_gnutls()
{
	external=$(normalize ..)

	tar xfJ gnutls-3.5.16.tar.gz &&
	ln -s nettle-3.4 nettle &&
    cd gnutls-3.5.16 &&
	GMP_CFLAGS="-I${external}/gmp-6.1.2" GMP_LIBS="-L${external}/gmp-6.1.2/.libs -lgmp" NETTLE_CFLAGS="-I${external}" NETTLE_LIBS="-L${external}/nettle-3.4 -lnettle" HOGWEED_CFLAGS="-I${external}" HOGWEED_LIBS="-L${external}/nettle-3.4 -lhogweed" ./configure --disable-shared --disable-cxx --disable-rpath --disable-doc --without-p11-kit --without-idn --with-included-libtasn1 --with-included-unistring > /dev/null &&
	make > /dev/null &&
	cd .. &&
	rm nettle &&
	mkdir -p ../../include/gnutls &&
	cp -f gnutls-3.5.16/lib/includes/gnutls/{gnutls,compat}.h ../../include/gnutls &&
	cp -f gnutls-3.5.16/lib/.libs/libgnutls.a ../../lib &&
	return 0
}

build_gmp &&
build_nettle &&
build_gnutls &&
rm -rf gnutls-3.5.16 &&
rm -rf nettle-3.4 &&
rm -rf gmp-6.1.2 &&
echo 'gnutls compiled.'
