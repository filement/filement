---- device <-> distribute protocol ----
The protocol is intended for communication between applications. This means that the protocol is binary and unreadable for most humans.
The protocol may change in the future. To avoid compatibility problems request header always contains device version so that the distribute server knows what request format to expect.
Communication can be done either with TLS or unencrypted. Unencrypted communication is used only when TLS is not available.

Each numeric value uses network byte order (big endian).
* indicates unused fields

Request header: 24B
| 0| 1| 2| 3| 4| 5| 6| 7| 8| 9|10|11|12|13|14|15|16|17|18|19|20|21|22|23|
|-----------------------------------------------+-----+-----+-----+-----+
|                      UUID                     |major|minor| rev | cmd |
|-----------------------------------------------+-----+-----+-----+-----+

Before registration there is no UUID. The registration commands use a special value instead of UUID:
| 0| 1| 2| 3| 4| 5| 6| 7| 8| 9|10|11|12|13|14|15|16|17|18|19|20|21|22|23|
|-----------------------------------+-----+-----+-----+-----+-----+-----+
|***********************************|platf|flags|major|minor| rev | cmd |
|-----------------------------------+-----+-----+-----+-----+-----+-----+

"platf" is a number corresponding to the platform_id in the table platforms
"flags" contains the following flags:
	whether the device was compiled as a release

Each command specifies request parameters and response. Request parameters are sent right after the request header.
Variable-length sequence of items is preceded by 32-bit value representing the count of the items. For example character sequences are preceded by the number of characters in the sequence.

Some commands send status code as response. This status code is 0 on success and the absolute value of the error code on error. The status code is sent as uint16_t in big endian.

REGISTER_EMAIL, REGISTER_AUTH - allow a device to become part of the filement infrastructure
UNREGISTER - removes a device from the filement infrastructure
CMD_UPGRADE_LIST - requests list of files required to upgrade the device server to a new version (only used on some platforms)
CMD_UPGRADE_FINISH - notifies that the device successfully upgraded to a new version
CMD_PROXY_LIST - requests a list of device proxy servers (see device_proxy for more information). the distribute server tries to take the geographical location of each server into account in order to ensure faster communication
CMD_NAME - requests information about the name of the current device
CMD_RENAME - changes the name of the current device

legacy commands:
CMD_ADDUSER_OLD
CMD_RMUSER_OLD
CMD_TOKEN_AUTH_OLD

REGISTER_EMAIL
request:
	email													variable
	device name												variable
response:
	status code												2B
	UUID													16B
	client_id												4B
	secret													variable

REGISTER_AUTH
request:
	authorization token										variable
	device name												variable
response:
	status code												2B
	UUID													16B
	client_id												4B
	secret													variable

UNREGISTER
request:
	secret													variable
response:
	success													1B

UPGRADE_LIST (deprecated)
response:
	records													variable
		source												variable
		destination											variable
		SHA-256 checksum									32B
		flags												1B

UPGRADE_FINISH
request:
	secret													variable
response:
	success													1B

PROXY_LIST
response:
	records													variable
		address												variable
		port												2B

NAME
request:
	secret													variable
response:
	device name												variable

RENAME
request:
	secret													variable
	device name												variable
response:
	status code												2B
