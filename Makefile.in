# Filement

mac_target=mac/build/Release/Filement.app

all: filement filement-gtk

pubcloud:
	$(MAKE) -C src pubcloud

filement:
	$(MAKE) -C src filement

filement-gtk:
	$(MAKE) -C src filement-gtk
	ln -f resources/background.png share/filement
	ln -f resources/logo.png share/filement
	ln -fs ../resources/applications ../resources/icons data

filement.deb: filement filement-gtk
	mkdir -p '/tmp/filement-@{VERSION}@{PREFIX}/lib' '/tmp/filement-@{VERSION}/usr/share'
	cp -rL `pwd`/bin `pwd`/share '/tmp/filement-@{VERSION}@{PREFIX}'
	cp -rL `pwd`/lib '/tmp/filement-@{VERSION}@{PREFIX}/lib/@{ARCHITECTURE}-linux-gnu'
	cp -rL `pwd`/data/* '/tmp/filement-@{VERSION}/usr/share'
	find /tmp/filement-@{VERSION} -name .gitkeep -delete
	tar -czf /tmp/control.tar.gz --numeric-owner --owner 0 --group 0 -C 'linux' control
	tar -czf /tmp/data.tar.gz --numeric-owner --owner 0 --group 0 -C '/tmp/filement-@{VERSION}' .
	cd linux && ar -cr "../filement_@{VERSION}-1_@{ARCHITECTURE}.deb" debian-binary /tmp/control.tar.gz /tmp/data.tar.gz
	rm -rf '/tmp/filement-@{VERSION}' '/tmp/data.tar.gz' '/tmp/control.tar.gz'

filement.rpm: filement filement-gtk
	mkdir -p /tmp/rpmbuild/RPMS /tmp/rpmbuild/SRPMS /tmp/rpmbuild/BUILD /tmp/rpmbuild/SOURCES /tmp/rpmbuild/SPECS /tmp/rpmbuild/tmp
	mkdir -p '/tmp/filement-@{VERSION}@{PREFIX}' '/tmp/filement-@{VERSION}/usr/share'
	cp -rL `pwd`/bin `pwd`/share '/tmp/filement-@{VERSION}@{PREFIX}'
	cp -rL `pwd`/lib '/tmp/filement-@{VERSION}@{PREFIX}/lib64'
	cp -rL `pwd`/data/* '/tmp/filement-@{VERSION}/usr/share'
	find /tmp/filement-@{VERSION} -name .gitkeep -delete
	tar -czf /tmp/rpmbuild/SOURCES/filement-@{VERSION}.@{ARCHITECTURE}.tar.gz --numeric-owner --owner 0 --group 0 -C '/tmp' filement-@{VERSION}
	cp -f linux/filement.spec /tmp/rpmbuild/SPECS
	cp -f linux/.rpmmacros ~/
	cd /tmp/rpmbuild && rpmbuild -ba SPECS/filement.spec
	mv /tmp/rpmbuild/RPMS/@{ARCHITECTURE}/filement-@{VERSION}-1.@{ARCHITECTURE}.rpm .
	rm -f ~/.rpmmacros
	rm -rf '/tmp/filement-@{VERSION}' '/tmp/rpmbuild'

mac/build/Release/Filement.app/Contents/MacOS/Filement:
	$(MAKE) -C src libfilement.so
	ln -f resources/background.png share/filement
	ln -f resources/logo.png share/filement
	install_name_tool -id "/Applications/Filement.app/Contents/Frameworks/libfilement.dylib" "lib/libfilement.dylib" # TODO ideally I should keep the original lib
	cd mac && xcodebuild -project Filement.xcodeproj -configuration Release GCC_PREPROCESSOR_DEFINITIONS='@{MAC}'

filement.dmg: mac/build/Release/Filement.app/Contents/MacOS/Filement
	find $(mac_target) -name '.DS_Store' -delete
	chmod a+x $(mac_target)"/Contents/MacOS/ffmpeg"
	hdiutil create '/tmp/temp.dmg' -volname "Filement" -ov -fs 'Case-sensitive HFS+' -fsargs "-c c=64,a=16,e=16" -srcfolder $(mac_target) -srcfolder "mac/.background" -format UDRW -size 65536k
	hdiutil attach -readwrite -noverify '/tmp/temp.dmg'
	ln -s /Applications /Volumes/Filement
	osascript < mac/image.scpt
	rmdir /Volumes/Filement/.Trashes
	chmod -Rf go-w /Volumes/Filement
	sync
	hdiutil detach /Volumes/Filement
	hdiutil convert /tmp/temp.dmg -ov -format UDZO -imagekey zlib-level=9 -o filement.dmg
	rm /tmp/temp.dmg

lib/libfilement.so:
	$(MAKE) -C src libfilement.so

filement.apk: lib/libfilement.so
	rm -f android/Filement.androidstudio/Filement/src/main/jniLibs/armeabi/libfilement.so 
	cd android/Filement.androidstudio && ./gradlew assemble
	mv android/Filement.androidstudio/Filement/build/outputs/apk/release/Filement-release-unsigned.apk "$@"
	test -z "@{SIGNKEY}" || jarsigner -verbose -keystore "@{SIGNKEY}.keystore" "$@" "@{SIGNKEY}"

	# keytool -genkey -v -keystore filecert.keystore -alias filecert -keyalg RSA -validity 1
	# jarsigner -verify "$@"

failsafe:
	$(MAKE) -C src failsafe

distribute:
	$(MAKE) -C src distribute1 distribute2

check:
	$(MAKE) -C tests check

register:
	$(MAKE) -C src register

install:
	install -d @{PREFIX}/bin @{PREFIX}/lib @{PREFIX}/share/filement
	install bin/* @{PREFIX}/bin
	install lib/* @{PREFIX}/lib
	cp -r share/* @{PREFIX}/share
	cp -rL data/* /usr/share 2> /dev/null || :
	# TODO copy ffmpeg on mac

uninstall:
	rm -f @{PREFIX}/bin/filement @{PREFIX}/bin/filement-gtk
	rm -f @{PREFIX}/lib/libfilement.so
	rm -rf @{PREFIX}/share/filement/
	rm -f /usr/share/icons/hicolor/{48x48,256x256}/apps/filement.png /usr/share/applications/filement.desktop
	rm -rf /usr/share/doc/filement

clean:
	$(MAKE) -C src clean
	$(MAKE) -C tests clean
	rm -f share/filement/background.png share/filement/logo.png
	rm -f data/applications data/icons
	rm -f mac/build/Release/Filement.app/Contents/MacOS/Filement
	rm -f filement.dmg

mrproper: clean
	rm config.log
	$(MAKE) -C src mrproper
