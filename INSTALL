# Installation from source

## Debian 9

Install dependencies.

	sudo apt-get install git gcc make zlib1g-dev libgnutls28-dev libavformat-dev ffmpeg

If you want to use the graphical interface (using GTK+), some additional packages are needed.

	sudo apt-get install libgtk2.0-dev

Download the source.

	git clone https://github.com/filement/filement.git
	cd filement

Prepare the source for compilation.

	./configure

Compile the source with one of the following commands:

	make filement		# compiles only the command line frontend
	make filement-gtk	# compiles only the graphical frontend
	make all			# compiles both frontends

Install filement.

	sudo make install

If you install the graphical interface, you may want to update the index of available icons.

	sudo gtk-update-icon-cache /usr/share/icons/hicolor

## Fedora 26

Setup RPM fusion to get access to all dependencies.

	sudo dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm

Install dependencies.

	sudo dnf install git zlib-devel gnutls-devel ffmpeg-devel

If you want to use the graphical interface (using GTK+), some additional packages are needed.

	sudo dnf install gtk2-devel

Download the source.

	git clone https://github.com/filement/filement.git
	cd filement

Prepare the source for compilation.

	./configure

Compile the source with one of the following commands:

	make filement		# compiles only the command line frontend
	make filement-gtk	# compiles only the graphical frontend
	make all			# compiles both frontends

Install filement.

	sudo make install

If you install the graphical interface, you may want to update the index of available icons.

	sudo gtk-update-icon-cache /usr/share/icons/hicolor

## FreeBSD 11.1

Install dependencies (as root).

	cd /usr/ports/devel/git && make install clean
	cd /usr/ports/devel/pkgconf && make install clean
	cd /usr/ports/lang/gcc && make install clean
	cd /usr/ports/security/gnutls && make install clean
	cd /usr/ports/multimedia/ffmpeg && make install clean

If you want to use the graphical interface (using GTK+), some additional packages are needed.

	cd /usr/ports/multimedia/x11-toolkits/gtk20 && make install clean

Download the source.

	git clone https://github.com/filement/filement.git
	cd filement

Prepare the source for compilation.

	./configure

Compile the source with one of the following commands:

	make filement		# compiles only the command line frontend
	make filement-gtk	# compiles only the graphical frontend
	make all			# compiles both frontends

Install filement.

	sudo make install

If you install the graphical interface, you may want to update the index of available icons.

	sudo gtk-update-icon-cache /usr/share/icons/hicolor

## MacOS X 10.8

Download Xcode from https://developer.apple.com/xcode/ and install it.
Download git from https://git-scm.com/download/mac and install it.

Download the source.

	git clone https://github.com/filement/filement.git
	cd filement

Prepare the source for compilation.

	./configure

Create a dmg archive.

	make filement.dmg

The archive will be in the current directory. You can then install it like other Mac applications (mounting it and dragging Filement.app to the Applications folder).

## Android 6

The following instructions describe using Debian to compile for Android. Some of the steps will differ when using other host platforms. The whole process may require around 10GiB of disk space.

Install required packages. You'll need to make sure apt is configured to use contrib packages (in /etc/apt/sources.list).

	sudo apt-get install git binutils google-android-ndk-installer android-sdk gradle

	google-android-m2repository-installer

Download the source.

	git clone https://github.com/filement/filement.git
	cd filement

Generate a sign key (required by Android to install the apk package). Replace <mycert> with a name of your choice for the key.

	keytool -genkey -v -keystore <mycert>.keystore -alias <mycert> -keyalg RSA -validity 365

Configure and compile for Android. This will require specifying the path to your NDK directory. This will typically be /usr/lib/android-ndk/ (you can check with `dpkg -L google-android-ndk-installer`). You also need to provide the name of of the sign key.

	./configure --android-ndk=/usr/lib/android-ndk --android-key=<mycert>

Due to a bug in gradle, write permission is required in the android-sdk directory. As a workaround, you can create a copy of android-sdk that is writable for the user executing make. The environment variable ANDROID_HOME is used by gradle to locate the sdk. It is also required by gradle that the license of android-sdk is accepted.

	export ANDROID_HOME=/tmp/filement_android-sdk
	cp -r /usr/lib/android-sdk "$ANDROID_HOME"
	mkdir -p "$ANDROID_HOME/licenses"
	echo -e "\nd56f5187479451eabf01fb78af6dfcb131a6481e" > "$ANDROID_HOME/licenses/android-sdk-license"

Create the apk package.

	make filement.apk

Finally, you can remove the copy of the sdk.

	rm -r /tmp/filement_android-sdk

# Running Filement

In order to start using Filement, you need to create an account in filement.com and then register your device.
Visit http://www.filement.com/register to create an account.

Registration is done by running any of the filement executables and specifying the email of your account and a name and password for the device. The password is used to protect the access to the device from within your account.
Two executables are available. Both can be used to start the filement device server. On the first start, you have to register the device in the Filement infrastructure. After the registration, the device will start automatically on login.

executable name: filement
	Intended to be used from the command line.

executable name: filement-gtk
	Intended to be used from a graphical environment (available in the category Network applications).

# Uninstalling Filement

Below is described how to uninstall Filement when installed from source.

To uninstall Filement from your Mac, use Finder to go to /Applications and drag Filement.app to the trash.

To uninstall Filement from your Android, go to the list of applications and drag Filement to the uninstall action.

To uninstall Filement on other platforms, use make in the directory where you compiled Filement:

	make uninstall

# Compiling other targets

For distribute you'll also need:
	sudo apt-get install default-libmysqlclient-dev libmemcached-dev
	sudo cpan install String::Util Text::CSV_XS

Generating src/distribute/ipdb/ipdb.o

	cd src/distribute/ipdb/
	wget 'http://geolite.maxmind.com/download/geoip/database/GeoLiteCity_CSV/GeoLiteCity-latest.zip' -O ipdb.zip
	unzip ipdb.zip

	# rename the extracted files to blocks.csv and locations.csv

	./generate.pl

On the target machine, you'll need several libraries:

	libgnutls.so
	libnettle.so
	libhogweed.so
	libmariadbclient.so
	libmemcached.so

# Notes

Some platforms and targets haven't been adapted since the project was released as open source. These include the Windows and various router versions of the device application and the targets pubcloud, ftp proxy and cloud proxy.

##

TODO
	command line app
		version information
		reset while a device is running
	gui app
		version information
		more robust code (create directories in the path, make sure there are no memory leaks and concurrency problems, etc.)
	modify filement_stop() to cancel server_listen()
	automate version deployment

	4 test mac upgrade
	0 make sure rpm and deb can be generated on the existing vms (or update instructions) (4)
	3 test rpm and deb on clean systems (0)
